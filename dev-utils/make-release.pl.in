#!@PERL@
######################################################################
#
# $Id$
#
# Make a release.
#
# Optional argument is version string, e.g. "0.1.4"
# By default, current version from configure.ac is used.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

use Cwd;
use File::Copy;
use File::Path;
use File::Spec;
use File::Temp;
use Getopt::Std;

# CVSROOT for exporting source
my $cvsroot = ":pserver:anonymous\@cvs.globus.org:/home/globdev/CVS/globus-packages";

my $packageVersion = "@PACKAGE_VERSION_STRING@";

######################################################################
#
# Parse commandline options
#

sub HELP_MESSAGE
{
    print <<"EOF";
Usage $0: [<options>]

Options are:
   -d <dir>      Destination directory for tarball (default is current dir)
   -F            Force tag (for use with -t)
   -h            Print usage and exit
   -t            Tag current CVS head
   -v            Print version and exit
   -V <version>  Use <version> instead of $packageVersion

EOF
;
}

sub VERSION_MESSAGE
{
    print "$0 GridShib-CA $packageVersion\n";
}

my %options;
getopts('d:FhtvV:', \%options);

if (defined($options{h}))
{
    HELP_MESSAGE();
    exit(0);
}

if ($options{v})
{
    VERSION_MESSAGE();
    exit(0);
}

my $cvstag = $options{V} || $packageVersion;

if ($cvstag !~ /^[0-9]+\.[0-9]+\.[0-9]+(-\w+)?/)
{
  print "Provided version string ($cvstag) is not in legal format. E.g. \"4.5.3\"\n";
  exit(1);
}

$cvstag =~ s/\./_/g;
$cvstag = "v" . $cvstag;

######################################################################
#
# Get target directory for tarball
#

my $targetDir = $options{d} || getcwd();

if (! -d $targetDir )
{
    print "Target directory $targetDir is not a directory.\n";
    exit(1);
}

if (! -w $targetDir )
{
    print "Target directory $targetDir is not writable.\n";
    exit(1);
}

######################################################################
#
# Tag CVS head, if so requested
#

if ($options{t})
{
    print "Tagging CVS head with $cvstag\n";
    my $cmd = sprintf("@CVS@ rtag %s $cvstag gridshib/gridshib-ca",
		      ($options{"F"} ? "-F" : ""));
    execCmd($cmd);
}

######################################################################
#
# Make temporary directory and chdir() to it
#
my $template = "gridshib-ca-make-release-XXXXXX";
my $working_dir = File::Temp->tempdir($template);
print "Working dir is $working_dir\n";
chdir($working_dir) || die "Could not chdir($working_dir): $!";

######################################################################
#
# Export code from CVS ane make distribution
#
$cmd = "@CVS@ -d$cvsroot export -r $cvstag -d gridshib-ca gridshib/gridshib-ca";
execCmd($cmd);

chdir("gridshib-ca") || die "Could not chdir(gridshib-ca): $!";

$cmd = "autoconf";
execCmd($cmd);

$cmd = "./configure --enable-build --with-bc-source-path=@BC_SOURCE@";
execCmd($cmd);

$cmd = "@MAKE@ dist";
execCmd($cmd);

my $tarball = "@DIST_TARBALL_NAME@";

######################################################################
#
# Copy tarball back to original current directory
#
copy($tarball, $targetDir) || die "Could not copy $tarball to $targetDir: $!";

my $fullPath = File::Spec->catfile($targetDir, $tarball);

$cmd = "ls -l $fullPath";
execCmd($cmd);

######################################################################
#
# Done
#

rmtree($working_dir);

exit(0);

######################################################################
#
# Support functions
#

sub execCmd
{
    my $cmd = shift;

    print "Executing $cmd\n";
    if (system($cmd))
    {
	print "Exec of \"$cmd\" failed.\n";
	exit(1);
    }
}

