#!@PERL@ @PERL_ARGS@
######################################################################
#
# $Id$
#
# This script serves as a welcome mat for users. It should be Shibboleth
# protected and it makes sure that REMOTE_USER is available before
# providing a link to invoke the "create-jnlp" script.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

use GridShibCA::Config;

sub errorExit
{
    my $format = shift;
    my $string = sprintf($format, @_);

    print <<"EOF";
Content-type: text/html

<html>
<head>
<title>GridShib CA Error</title>
</head>
<body>
$string
</body>
</html>
EOF
;

    my $referer = $cgi-referer();
    if (defined($referer))
    {
	$string .= sprintf(" (referer=%s)", $referer);
    }

    $logger->err($string);

    exit(1);
}

######################################################################

my $config = GridShibCA::Config->new();

$logger = $config->getLogger();

if (!defined($logger))
{
    # No good way to report this error
    die "Could not get Logger: " . $config->getError();
}

######################################################################

my $cgi = $config->getCGI();

if (!defined($cgi))
{
    errorExit("Could not access CGI interface: "
	      . $config->getError());
}

my $user = $cgi->getUserId();
my $idp = $cgi->getIdP();

if (!defined($user))
{
    if (defined($idp))
    {
	errorExit("Origin sie ($idp) is not releasing identity to GridShibCA.");
    }
    else
    {
	errorExit("Cannot identify origin site or user. It appears this script is not Shibboleth protected.");
    }
}

my $DN = undef;

if (defined($user))
{
    my $ca = $config->getCA($user, $idp);
    if (!defined($ca))
    {
	errorExit("Could not instantiate CA: " . $config->getError());
    }
    $DN = $ca->getOpenSSLDN();
    if (!defined($DN))
    {
	errorExit("Could not get DN for user: " . $ca->getError());
    }
}

######################################################################
#
# Check user authoriztion
#

my $authorization = $config->getAuthorization();

if (!$authorization->authorizeUser($user, $idp))
{
    errorExit("Authorization failed: User %s (Idp %s): %s",
	      $user, $idp, $authorization->getError());
}

if (defined($portalURL))
{
    if (!$authorization->authorizePortal($portalURL))
    {
	errorExit("Authorization failed: Portal (%s) not authorized: %s",
		  $portalURL, $authorization->getError());
    }
}

######################################################################
#
# Make a html-friendly version of DN

my $formattedDN = $DN;
# Replace any spaces with non-breaking spaces
$formattedDN =~ s/ /&nbsp;/g;

######################################################################

my $htmlHeader = $cgi->getHTMLHeader();
my $htmlFooter = $cgi->getHTMLFooter();

print <<"EOF";
Content-type: text/html

<html>
<head>
  <title>GridShib CA Welcome</title>
  <META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">
  <META HTTP-EQUIV=\"Expires\" CONTENT=\"-1\">
</head>
$htmlHeader
EOF

my $shibProtectedCGIBinURL =
    $config->getParam("ShibbolethProtectedCGIBinURL");
my $gridShibCAURL = $config->getParam("GridShibCAURL");

my $defaultLifetime = $config->getParam("DefaultCredLifetime") / 3600;
my $maximumLifetime = $config->getParam("MaximumCredLifetime") / 3600;

print <<"EOF";
<center>
Welcome $user.
<p>
Your GridShib-CA X.509 identity is:<br>
$formattedDN
<p>
<form action=\"$shibProtectedCGIBinURL/create-jnlp\">
Credential Lifetime:
<input type="radio" name="lifetime" value="default" checked>
    Default ($defaultLifetime hours)
<input type="radio" name="lifetime" value="specified">
  Other:
<input type="text" name="specifiedLifetime" value="$defaultLifetime" size=4>
  Hours ($maximumLifetime max)
<input type="hidden" name="lifetimeUnit" value="hours">
<br>
EOF
    ;

#
# Do we have trusted CAs to pass to client?
#

my $trustedCADirectory = $config->getParam("TrustedCADirectory");

if (defined($trustedCADirectory) &&
    (-x $trustedCADirectory) &&
    (-d $trustedCADirectory))
{
    print <<"EOF";
<input type=checkbox name="installTrustedCAs" value="true" checked>
Update my trusted CAs
<br>
EOF
;
}

print <<"EOF";
  <input type=\"submit\" value=\"Press here to generate and download Grid credential.\">
</form>
<p>
When the Credential Retriever application completes, you may click on
the following button to return to the main GridShib CA page or simply
close this browser window.
<form action="$gridShibCAURL">

<input type="submit" value="Return to GridShib CA main page">
</form>
</center>
$htmlFooter
</html>
EOF

### Local Variables: ***
### mode:perl ***
### End: ***
