######################################################################
#
# Makefile for GridShib CA
#
# $Id$
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

srcdir = @srcdir@
VPATH = @srcdir@
prefix = @prefix@

# Mode: "build" if build is enabled; "dist" otherwise
MODE=@MODE@

######################################################################

# Trusted CA certificates to include in Jar trustStore
CA_CERTS = certificates/*.[0-9]

# Path to jar trustStore
TRUST_STORE = resources/trustStore

# Project java sources
JAVA_SRCS = edu/ncsa/gridshib/gridshibca/*.java \
	edu/ncsa/gridshib/gridshibca/Version.java
JAVA_CLASSES = $(JAVA_SRCS:.java=.class)

# Password to pass into keytool. Not actually used for anything, just keeps
# keytool for prompting for one.
TRUST_STORE_PASSWD=abcdef

# Target jar file
JARFILE=CredentialRetriever.jar

# Unsigned jar file created during build
UNSIGNED_JARFILE=CredentialRetriever-unsigned.jar

# Other files to include in jar
JAR_INCS=$(TRUST_STORE)

#
# Distribution configuration
#

# Directory to build distribution in
DIST_DIR=@PACKAGE_NAME@-@PACKAGE_VERSION@

# Files to include in distribution
DIST_FILES=$(JARFILE) \
	configure \
	configure.ac \
	Makefile.in \
	install-sh \
	webdocs/*.in \
	webdocs/Shibboleth-logo_RGB.jpg \
	webdocs/globustoolkit.gif \
	webdocs/openidp-logo-small.png \
	edu/ncsa/gridshib/gridshibca/*.java \
	utils/*.in \
	doc/*.in \
	certificates/*.[0-9] \
	LICENSE

# Distribution file
DIST_FILE=$(DIST_DIR).tar.gz

#
# Installation configuration
#

# Installation directories - see INSTALL.config
GRIDSHIB_CA_CONF_DIR=@GRIDSHIB_CA_CONF_DIR@
CONF_FILES=webdocs/CredentialRetriever.jnlp
UTILS=utils/mapper.sh
SHIB_PROTECTED_CGI_BIN_DIR=@SHIB_PROTECTED_CGI_BIN_DIR@
PROTECTED_CGI_BIN_FILES=webdocs/login \
	webdocs/sysinfo.pl \
	webdocs/welcome.pl \
	webdocs/generateCred.cgi
GRIDSHIB_CA_HTML_DIR=@GRIDSHIB_CA_HTML_DIR@
HTML_FILES=webdocs/Shibboleth-logo_RGB.jpg \
	webdocs/globustoolkit.gif \
	webdocs/openidp-logo-small.png \
	webdocs/index.html \
	webdocs/login.html \
	$(JARFILE)

# User that httpd runs under
WWW_USER=@WWW_USER@

######################################################################
#
# Binaries and commands
#

INSTALL = @INSTALL@
MKDIR = mkdir
RMDIR = rmdir
CP = cp
TOUCH = touch

# Tools needed for building and distribution

JAVAC = @JAVAC@
JAR = @JAR@
KEYTOOL = @KEYTOOL@
JARSIGNER = @JARSIGNER@
TAR = @TAR@
RM = rm
DIR_EXISTS = test -d

######################################################################

default: build-$(MODE)

build-dist:	configure-generated-scripts
	@echo "Run 'make install' to install."

build-build:	build-mode $(JAVA_SRCS) $(JAVA_CLASSES) configure-generated-scripts

build-mode:
	@if test $(MODE) != "build" ; then \
		echo "Not configured for building." ; \
		echo "Rerun configure with --enable-build to enable building." ;\
		exit 1 ;\
	fi

jar: build-mode $(JARFILE)

$(UNSIGNED_JARFILE):	$(JAVA_CLASSES) $(JAR_INCS)
# Need to include the org.globus stuff here because one of the
# class files has a "$" in it and I haven't figured out any other
# way to do this and avoid getting it expanded.
	$(JAR) cf $@ $^ org/globus/util/*.class

$(JARFILE): $(UNSIGNED_JARFILE)
	$(JARSIGNER) -storetype pkcs12 -signedjar $@ $^ default

%.class : %.java
	$(JAVAC) $^

######################################################################
#
# Distribution building
#

trustStore:	build-mode $(TRUST_STORE)

$(TRUST_STORE): ${CA_CERTS}
	@$(RM) -f $@
	@for cert in $^; do \
		echo Adding $${cert} to trustStore ;\
		${KEYTOOL} -import -keystore $@ -noprompt -alias $${cert} -storepass ${TRUST_STORE_PASSWD} -file $${cert} ;\
	done

dist:	build-mode $(DIST_FILE)

$(DIST_FILE): $(DIST_FILES)
	$(DIR_EXISTS) $(DIST_DIR) || $(MKDIR) $(DIST_DIR)
	for file in $^; do \
		dir=`dirname $${file}` ;\
		$(DIR_EXISTS) $(DIST_DIR)/$${dir} || $(MKDIR) -p $(DIST_DIR)/$${dir} ;\
		$(CP) $${file} $(DIST_DIR)/$${dir} ;\
	done
	$(TAR) cfz $@ $(DIST_DIR)/*
	$(RM) -rf $(DIST_DIR)
	ls -l $(DIST_FILE)

######################################################################
#
# Installation
#

install:
	@echo "Creating $(GRIDSHIB_CA_CONF_DIR)"
	@$(INSTALL) -d -o $(WWW_USER) -m 0700 $(GRIDSHIB_CA_CONF_DIR)
	@for file in $(CONF_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0600 $${file} $(GRIDSHIB_CA_CONF_DIR) ;\
	done
	@for file in $(UTILS) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0700 $${file} $(GRIDSHIB_CA_CONF_DIR) ;\
	done
	@echo "Creating $(GRIDSHIB_CA_HTML_DIR)"
	@$(INSTALL) -d -o $(WWW_USER) -m 0755 $(GRIDSHIB_CA_HTML_DIR)
	@for file in $(HTML_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0644 $${file} $(GRIDSHIB_CA_HTML_DIR) ;\
	done
	@echo "Creating $(SHIB_PROTECTED_CGI_BIN_DIR)"
	@$(INSTALL) -d -o $(WWW_USER) -m 0755 $(SHIB_PROTECTED_CGI_BIN_DIR)
	@for file in $(PROTECTED_CGI_BIN_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0755 $${file} $(SHIB_PROTECTED_CGI_BIN_DIR) ;\
	done
	@echo "Installation done."

uninstall:
	@for file in $(CONF_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(GRIDSHIB_CA_CONF_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(GRIDSHIB_CA_CONF_DIR) ; then $(RMDIR) $(GRIDSHIB_CA_CONF_DIR) ; fi
	@for file in $(HTML_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(GRIDSHIB_CA_HTML_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(GRIDSHIB_CA_HTML_DIR) ; then $(RMDIR) $(GRIDSHIB_CA_HTML_DIR) ; fi
	@for file in $(PROTECTED_CGI_BIN_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(PROTECTED_CGI_BIN_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(SHIB_PROECTED_CGI_BIN_DIR) ; then $(RMDIR) $(SHIB_PROTECTED_CGI_BIN_DIR) ; fi
	@echo "Uninstall done."

######################################################################
#
# Allow for automatic regeneration of configure and Makefile
#

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

$(srcdir)/configure: @CONFIGURE_DEP@
	cd $(srcdir) && autoconf

######################################################################
#
# configure-generated stuff
#

HTML_INCS = @HTML_INCS@
HTML_DEPS = $(HTML_INCS:.html=.html.in)

configure-generated-scripts: @CONF_GENERATED_SCRIPTS@

webdocs/generateCred.cgi: webdocs/generateCred.cgi.in config.status
	./config.status

webdocs/login: webdocs/login.in config.status
	./config.status

webdocs/index.html: webdocs/index.html.in config.status $(HTML_DEPS)
	./config.status

webdocs/faq.html: webdocs/faq.html.in config.status $(HTML_DEPS)
	./config.status

doc/license.html: doc/license.html.in config.status \
		$(HTML_DEPS) LICENSE
	./config.status

webdocs/login.html: webdocs/login.html.in config.status $(HTML_DEPS)
	./config.status

webdocs/sysinfo.pl: webdocs/sysinfo.pl.in config.status
	./config.status

webdocs/test.pl: webdocs/test.pl.in config.status
	./config.status

webdocs/welcome.pl: webdocs/welcome.pl.in config.status $(HTML_DEPS)
	./config.status

webdocs/CredentialRetriever.jnlp: webdocs/CredentialRetriever.jnlp.in config.status
	./config.status

######################################################################

edu/ncsa/gridshib/gridshibca/Version: edu/ncsa/gridshib/gridshibca/Version.in config.status
	./config.status

edu/ncsa/gridshib/gridshibca/Version.java: edu/ncsa/gridshib/gridshibca/Version
	@if test -e $@ ; then \
	  if diff $@ $^ > /dev/null ; then \
	    : ;\
	  else \
	    echo "Updating Version.java" ;\
	    $(CP) $^ $@ ;\
	  fi ;\
	else \
	  echo "Creating Version.java" ;\
	  $(CP) $^ $@ ;\
	fi

######################################################################
#
# Allow me to rsync from development host to test host. No one else
# needs to worry about this section. - Von

# -a Archive mode
# -u Update mode: newer files only
# -v Verbose
# -R use relative path names

RSYNC=rsync -auvR 

rsync: jar
	$(RSYNC) $(DIST_FILES) computer.ncsa.uiuc.edu:~/gridshib-ca
