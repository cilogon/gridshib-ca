
srcdir = @srcdir@
VPATH = @srcdir@
prefix = @prefix@

# Mode: "build" if build is enabled; "dist" otherwise
MODE=@MODE@

######################################################################

# Trusted CA certificates to include in Jar trustStore
CA_CERTS = certificates/*.[0-9]

# Path to jar trustStore
TRUST_STORE = resources/trustStore

# Project java sources
JAVA_SRCS = edu/ncsa/gridshib/gridshibca/*.java
JAVA_CLASSES = $(JAVA_SRCS:.java=.class)

# Password to pass into keytool. Not actually used for anything, just keeps
# keytool for prompting for one.
TRUST_STORE_PASSWD=abcdef

# Target jar file
JARFILE=CredentialRetriever.jar

# Unsigned jar file created during build
UNSIGNED_JARFILE=CredentialRetriever-unsigned.jar

# Other files to include in jar
JAR_INCS=$(TRUST_STORE)

# Directory to build distribution in
DIST_DIR=gridshib-ca

# Other files to include in distribution
DIST_FILES=$(JARFILE) \
	configure Makefile.in install-sh \
	webdocs/CredentialRetriever.jnlp \
	webdocs/Shibboleth-logo_RGB.jpg \
	webdocs/generateCred.cgi.in \
	webdocs/globustoolkit.gif \
	webdocs/index.html.in \
	webdocs/login.in \
	webdocs/openidp-logo-small.png \
	webdocs/sysinfo.pl.in \
	webdocs/test.pl.in \
	webdocs/welcome.pl.in

# Distribution file
DIST_FILE=$(DIST_DIR).tar.gz

# Installation directories - see INSTALL.config
GRIDSHIB_CA_CONF_DIR=@GRIDSHIB_CA_CONF_DIR@
CONF_FILES=webdocs/CredentialRetriever.jnlp
CGI_BIN_DIR=@CGI_BIN_DIR@
CGI_BIN_FILES=webdocs/generateCred.cgi \
	webdocs/test.pl
SHIB_PROTECTED_CGI_BIN_DIR=@SHIB_PROTECTED_CGI_BIN_DIR@
PROTECTED_CGI_BIN_FILES=webdocs/login \
	webdocs/sysinfo.pl \
	webdocs/welcome.pl
GRIDSHIB_CA_HTML_DIR=@GRIDSHIB_CA_HTML_DIR@
HTML_FILES=webdocs/Shibboleth-logo_RGB.jpg \
	webdocs/globustoolkit.gif \
	webdocs/openidp-logo-small.png \
	webdocs/index.html

# User that httpd runs under
WWW_USER=@WWW_USER@

######################################################################
#
# Binaries and commands
#

INSTALL = @INSTALL@
MKDIR = mkdir
RMDIR = rmdir
CP = cp

# Tools needed for building and distribution

JAVAC = @JAVAC@
JAR = @JAR@
KEYTOOL = @KEYTOOL@
JARSIGNER = @JARSIGNER@
TAR = @TAR@
RM = rm
DIR_EXISTS = test -d

######################################################################

default: build-$(MODE)

build-dist:
	@echo "Run 'make install' to install."

build-build:	build-mode $(JAVA_CLASSES)

build-mode:
	@if test $(MODE) != "build" ; then \
		echo "Not configured for building." ; \
		echo "Rerun configure with --enable-build to enable building." ;\
		exit 1 ;\
	fi

jar: build-mode $(JARFILE)

$(UNSIGNED_JARFILE):	$(JAVA_CLASSES) $(JAR_INCS)
# Need to include the org.globus stuff here because one of the
# class files has a "$" in it and I haven't figured out any other
# way to do this and avoid getting it expanded.
	$(JAR) cf $@ $^ org/globus/util/*.class

$(JARFILE): $(UNSIGNED_JARFILE)
	$(JARSIGNER) -storetype pkcs12 -signedjar $@ $^ default

%.class : %.java
	$(JAVAC) $^

trustStore:	build-mode $(TRUST_STORE)

$(TRUST_STORE): ${CA_CERTS}
	@$(RM) -f $@
	@for cert in $^; do \
		echo Adding $${cert} to trustStore ;\
		${KEYTOOL} -import -keystore $@ -noprompt -alias $${cert} -storepass ${TRUST_STORE_PASSWD} -file $${cert} ;\
	done

dist:	build-mode $(DIST_FILE)

$(DIST_FILE): $(DIST_FILES)
	$(DIR_EXISTS) $(DIST_DIR) || $(MKDIR) $(DIST_DIR)
	for file in $^; do \
		$(CP) $${file} $(DIST_DIR); \
	done
	$(TAR) cfz $@ $(DIST_DIR)/*
	$(RM) -rf $(DIST_DIR)

install:
	$(INSTALL) -d -o $(WWW_USER) -m 0700 $(GRIDSHIB_CA_CONF_DIR)
	@for file in $(CONF_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0755 $${file} $(GRIDSHIB_CA_CONF_DIR) ;\
	done
	$(INSTALL) -d -o $(WWW_USER) -m 0755 $(GRIDSHIB_CA_HTML_DIR)
	@for file in $(HTML_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0755 $${file} $(GRIDSHIB_CA_HTML_DIR) ;\
	done
	$(INSTALL) -d -o $(WWW_USER) -m 0755 $(CGI_BIN_DIR)
	@for file in $(CGI_BIN_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0755 $${file} $(CGI_BIN_DIR) ;\
	done
	$(INSTALL) -d -o $(WWW_USER) -m 0755 $(SHIB_PROTECTED_CGI_BIN_DIR)
	@for file in $(PROTECTED_CGI_BIN_FILES) ; do \
		echo "Installing $${file}" ;\
		$(INSTALL) -o $(WWW_USER) -m 0755 $${file} $(SHIB_PROTECTED_CGI_BIN_DIR) ;\
	done
	@echo "Installation done."
# XXX install DES key in ${GRIDSHIB_CA_CONF_DIR}

uninstall:
	@for file in $(CONF_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(GRIDSHIB_CA_CONF_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(GRIDSHIB_CA_CONF_DIR) ; then $(RMDIR) $(GRIDSHIB_CA_CONF_DIR) ; fi
	@for file in $(HTML_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(GRIDSHIB_CA_HTML_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(GRIDSHIB_CA_HTML_DIR) ; then $(RMDIR) $(GRIDSHIB_CA_HTML_DIR) ; fi
	@for file in $(CGI_BIN_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(CGI_BIN_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(CGI_BIN_DIR) ; then $(RMDIR) $(CGI_BIN_DIR) ; fi
	@for file in $(PROTECTED_CGI_BIN_FILES) ; do \
		f=`basename $${file}` ;\
		echo "Uninstalling $${f}" ;\
		rm -f $(PROTECTED_CGI_BIN_DIR)/$${f} ;\
	done
	@if $(DIR_EXISTS) $(SHIB_PROECTED_CGI_BIN_DIR) ; then $(RMDIR) $(SHIB_PROTECTED_CGI_BIN_DIR) ; fi
	@echo "Uninstall done."

######################################################################
#
# Allow for automatic regeneration of configure and Makefile
#

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

$(srcdir)/configure: @CONFIGURE_DEP@
	cd $(srcdir) && autoconf


######################################################################
#
# Allow me to rsync from development host to test host. No one else
# needs to worry about this section. - Von

# -a Archive mode
# -u Update mode: newer files only
# -v Verbose
# -R use relative path names

RSYNC=rsync -auvR 

rsync: jar
	$(RSYNC) $(DIST_FILES) computer.ncsa.uiuc.edu:~/gridshib-ca
