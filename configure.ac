dnl $Id$
dnl See Copyright statement below.
dnl See file 'LICENSE' for license.

AC_INIT(gridshib-ca, 0.3.0)
PACKAGE_RELEASE_STATUS="alpha2-test"

AC_REVISION($Id$)

COPYRIGHT="Copyright 2006 The Board of Trustees of the University of Illinois."
AC_SUBST(COPYRIGHT)
AC_COPYRIGHT(${COPYRIGHT})

LICENSE="LICENSE"
AC_SUBST_FILE(LICENSE)

dnl Sort out version strings based on our version
PACKAGE_VERSION_STRING="${PACKAGE_VERSION}-${PACKAGE_RELEASE_STATUS}"
AC_SUBST(PACKAGE_VERSION_STRING)

PACKAGE_FULLNAME=${PACKAGE_NAME}-${PACKAGE_VERSION}-${PACKAGE_RELEASE_STATUS}
AC_SUBST(PACKAGE_FULLNAME)

dnl tarball uses dashes of dots
PACKAGE_VERSION_MOD=`echo ${PACKAGE_VERSION} | sed -e "s/\./-/g"`
DIST_FILE_BASE=${PACKAGE_NAME}-${PACKAGE_VERSION_MOD}-${PACKAGE_RELEASE_STATUS}
AC_SUBST(DIST_FILE_BASE)

DIST_TARBALL_NAME=${DIST_FILE_BASE}.tar.gz
AC_SUBST(DIST_TARBALL_NAME)

dnl Documentation directory doesn't include release status (e.g. alpha/beta)
DOC_INSTALL_DIR=${PACKAGE_NAME}-${PACKAGE_VERSION}
AC_SUBST(DOC_INSTALL_DIR)

DIST_DIR=${PACKAGE_FULLNAME}
AC_SUBST(DIST_DIR)

dnl ------------------------------------------------------------
dnl Subdirectores we will be building in
SUBDIRS=""
AC_SUBST(SUBDIRS)

dnl ------------------------------------------------------------
dnl AC_SRC_FILE(FILES, SRC_FILES)
dnl For each file listed in FILES add ${file}.in to SRC_FILES
AC_DEFUN([AC_SRC_FILES],
[
$2="";
for file in ${$1} ; do
  $2="${$2} ${file}.in";
done
])dnl

dnl ------------------------------------------------------------
dnl Different groups of files

dnl Extra files that are distributed
DIST_EXTRA_FILES="\
	configure \
	configure.ac \
	Makefile.in \
	install-sh \
	LICENSE"
AC_SUBST(DIST_EXTRA_FILES)

dnl Generated binaries
BINARIES=""
AC_SUBST(BINARIES)

dnl Included HTML files that are installed in the configuration directory
HTML_HEADER=$srcdir/webdocs/header.html
AC_SUBST_FILE(HTML_HEADER)
HTML_FOOTER=$srcdir/webdocs/footer.html
AC_SUBST_FILE(HTML_FOOTER)
HTML_INCS="${HTML_HEADER} ${HTML_FOOTER}"
AC_SUBST(HTML_INCS)
AC_CONFIG_FILES([${HTML_INCS}])

dnl Header and footer files for generated documentation
DOC_HEADER=$srcdir/doc/header.html
AC_SUBST_FILE(DOC_HEADER)
DOC_FOOTER=$srcdir/doc/footer.html
AC_SUBST_FILE(DOC_FOOTER)
DOC_INCS="${DOC_HEADER} ${DOC_FOOTER}"
AC_SUBST(DOC_INCS)

dnl CGI-BIN scripts
CGI_BIN_SCRIPTS="webdocs/generateCred.cgi \
	webdocs/create-jnlp \
	webdocs/sysinfo.pl \
	webdocs/login.cgi \
	webdocs/portalLogin.cgi \
	webdocs/getTrustedCAs.cgi"
AC_SUBST(CGI_BIN_SCRIPTS)
AC_CONFIG_FILES([$CGI_BIN_SCRIPTS])
AC_SRC_FILES(CGI_BIN_SCRIPTS, CGI_BIN_SRCS)
AC_SUBST(CGI_BIN_SRCS)

dnl Files to be installed in unprotected html directory
HTML_FILES="webdocs/index.html \
	webdocs/checkPrerequisites.html \
	webdocs/GridShibCATester.jnlp"
AC_SUBST(HTML_FILES)
AC_CONFIG_FILES([$HTML_FILES])
AC_SRC_FILES(HTML_FILES, HTML_SRCS)
AC_SUBST(HTML_SRCS)

dnl Files to be installed in configuration directory
CONF_FILES="\
	webdocs/CredentialRetriever.jnlp \
	gridshib-ca.conf \
	authorizedIdps.conf \
	authorizedPortals.conf \
	${HTML_INCS}"
AC_SUBST(CONF_FILES)
AC_CONFIG_FILES([$CONF_FILES])
AC_SRC_FILES(CONF_FILES, CONF_SRCS)
AC_SUBST(CONF_SRCS)

dnl Utilities
UTILS="\
	utils/create-openssl-ca.pl \
	utils/check-config.pl"
AC_SUBST(UTILS)
AC_CONFIG_FILES([$UTILS])
AC_SRC_FILES(UTILS, UTIL_SRCS)
AC_SUBST(UTIL_SRCS)

dnl Java source files
JAVA_CLASSES="\
	edu/ncsa/gridshib/gridshibca/CredentialRetriever.class \
	edu/ncsa/gridshib/gridshibca/GUI.class \
	edu/ncsa/gridshib/gridshibca/GridShibCATester.class \
	edu/ncsa/gridshib/gridshibca/PEM.class \
	edu/ncsa/gridshib/gridshibca/UMask.class \
	edu/ncsa/gridshib/gridshibca/UMaskException.class \
	edu/ncsa/gridshib/gridshibca/Version.class"
AC_SUBST(JAVA_CLASSES)

dnl Jar file
JAR_FILE="GridShibCA.jar"
AC_SUBST(JAR_FILE)

dnl PERL modules
PERL_MODULES="\
	perl/GridShibCA/Authorization.pm \
	perl/GridShibCA/CA.pm \
	perl/GridShibCA/CertRegistry.pm \
	perl/GridShibCA/CGIinterface.pm \
	perl/GridShibCA/Command.pm \
	perl/GridShibCA/Config.pm \
	perl/GridShibCA/Logger.pm \
	perl/GridShibCA/MyProxyCA.pm \
	perl/GridShibCA/myVocsDBCertRegistry.pm \
	perl/GridShibCA/OpenSSLCA.pm \
	perl/GridShibCA/TokenGenerator.pm"
AC_SUBST(PERL_MODULES)
AC_CONFIG_FILES([$PERL_MODULES])
AC_SRC_FILES(PERL_MODULES, PERL_MODULE_SRCS)
AC_SUBST(PERL_MODULE_SRCS)

dnl Check for PERL modules needed for MyProxy client
AC_PROG_PERL_MODULES([IO::Socket::SSL],
	[AC_MSG_RESULT([Perl modules prequisites for MyProxy CA found.])],
	[AC_MSG_WARN([PERL module prequisites for MyProxy CA not found.])])

dnl PERL distributed modules
dnl These are perl modules that are distributed and not generated by
dnl autoconf
PERL_DIST_MODULES="\
	perl/Globus/Config.pm \
	perl/Globus/GSICredential.pm \
	perl/Globus/GSISocket.pm \
	perl/Globus/MyProxyClient.pm"
AC_SUBST(PERL_DIST_MODULES)

dnl Documentation files that are generated by autoconf
DOC_FILES="\
	doc/index.html \
	doc/license.html \
        doc/install.html \
	doc/changelog.html \
	doc/process-flow.html \
	doc/modules.html \
	doc/myproxy-ca.html \
	doc/portal-delegation.html"
AC_SUBST(DOC_FILES)
AC_SRC_FILES(DOC_FILES, DOC_SRCS)
AC_SUBST(DOC_SRCS)

dnl Extra documentation files to be installed
EXTRA_DOC_FILES="doc/*.jpg"
AC_SUBST(EXTRA_DOC_FILES)


dnl ----------------------------------------------------------------------	
dnl Find required binaries
AC_PROG_INSTALL
AC_PATH_PROG(PERL, perl)
AC_PATH_PROG(POD2HTML, pod2html)
AC_PATH_PROG(MKDIR, mkdir)
AC_PATH_PROG(RMDIR, rmdir)
AC_PATH_PROG(CP, cp)
AC_PATH_PROG(TOUCH, touch)
AC_PATH_PROG(RM, rm)

dnl ----------------------------------------------------------------------
dnl Stuff needed to build our openssl-based CA
AC_PROG_CC
AC_CHECK_LIB(crypto, CRYPTO_malloc)

AC_ARG_WITH(openssl-path,
	AC_HELP_STRING([--with-openssl-path],
		[Specify path to openssl binary (Default: None)]),
	[OPENSSL_PATH=${withval}],
	[OPENSSL_PATH=$PATH])

AC_PATH_PROG(OPENSSL, openssl, [FAILED], [$OPENSSL_PATH])

if test ${OPENSSL} = "FAILED"; then
   AC_MSG_ERROR([Could not find openssl binary in path.])
fi

BINARIES="${BINARIES} openssl-ca/openssl-ca"
SUBDIRS="${SUBDIRS} openssl-ca"

OPENSSL_CA_SRCS="\
	openssl-ca/Makefile.in \
	openssl-ca/*.c \
	openssl-ca/*.h"
AC_SUBST(OPENSSL_CA_SRCS)

dnl ------------------------------------------------------------
dnl Command-line options

dnl Enable building (aka development) mode?
AC_ARG_ENABLE(build,
	AC_HELP_STRING([--enable-build],
		[Enable build environment. For developers. (Default: Disabled)]),
	[MODE=build],
	[MODE=dist])
AC_SUBST(MODE)

AC_MSG_CHECKING([for name of various GridShib-CA directories])
default=gridshib-ca-${PACKAGE_VERSION}
AC_ARG_WITH(gridshib-ca-dir-name,
	AC_HELP_STRING([--with-gridshib-ca-dir-name=<name>],
		[Specifiy the name to use for install directories. (Default: gridshib-ca-<version>)]),
	[GRIDSHIB_CA_DIR_NAME=$withval],
	[GRIDSHIB_CA_DIR_NAME=$default])
AC_SUBST(GRIDSHIB_CA_DIR_NAME)
AC_MSG_RESULT(${GRIDSHIB_CA_DIR_NAME})

dnl Figure out prefix
myprefix=${prefix}
if test "x$myprefix" = xNONE ; then
   myprefix=$ac_default_prefix
fi

AC_MSG_CHECKING([for path to GridShib CA configuration directory])
default=${myprefix}/${GRIDSHIB_CA_DIR_NAME}
AC_ARG_WITH(gridshib-ca-conf-dir,
	AC_HELP_STRING([--with-gridshib-ca-conf-dir=<path>],
		[Specify the full path of the gridshib-ca configuration directory. This is where keys, certificates and other files for the GridShib CA are stored. (Default: <prefix>/<gridshib-ca-dir-name>)]),
	[GRIDSHIB_CA_CONF_DIR=$withval],
	[GRIDSHIB_CA_CONF_DIR=$default])
AC_SUBST(GRIDSHIB_CA_CONF_DIR)
AC_MSG_RESULT(${GRIDSHIB_CA_CONF_DIR})

AC_MSG_CHECKING([for Apache httpd root directory])
default=/var/www/
AC_ARG_WITH(www-dir,
	AC_HELP_STRING([--with-www-dir=<path>],
		[Specify the base www directory. This is directory under which the Apache HTTPD has the html/ and cgi-bin/ directories. (Default: /var/www/)]),
	[WWW_DIR=$withval],
	[WWW_DIR=$default])
AC_SUBST(WWW_DIR)
AC_MSG_RESULT(${WWW_DIR})

AC_MSG_CHECKING([for URL for Shibboleth-protected CGI-BIN directory])
default=/cgi-bin/shib-protected/${GRIDSHIB_CA_DIR_NAME}
AC_ARG_WITH(shib-protected-cgi-bin-url,
	AC_HELP_STRING([--with-shib-protected-cgi-bin-url=<url>],
		[Specify the Shibboleth-protected cgi-bin url. This is the relative URL, without hostname, where Shibboleth-protected CGI-BIN executables are installed. (Default: /cgi-bin/shib-protected/<gridshib-ca-dir-name>)]),
	[SHIB_PROTECTED_CGI_BIN_URL=$withval],
	[SHIB_PROTECTED_CGI_BIN_URL=$default])
AC_SUBST(SHIB_PROTECTED_CGI_BIN_URL)
AC_MSG_RESULT(${SHIB_PROTECTED_CGI_BIN_URL})

AC_MSG_CHECKING([for path to Shibboleth-protected CGI-BIN directory])
default=${WWW_DIR}/${SHIB_PROTECTED_CGI_BIN_URL}
AC_ARG_WITH(shib-protected-cgi-bin-dir,
	AC_HELP_STRING([--with-shib-protected-cgi-bin-dir=<path>],
		[Specify the Shibboleth-protected cgi-bin directory. This is the path that corresponds the the shib-protected-cgi-bin url. (Default: <www-dir>/<gridshib-ca-cgi-bin-url>)]),
	[SHIB_PROTECTED_CGI_BIN_DIR=$withval],
	[SHIB_PROTECTED_CGI_BIN_DIR=$default])
AC_SUBST(SHIB_PROTECTED_CGI_BIN_DIR)
AC_MSG_RESULT(${SHIB_PROTECTED_CGI_BIN_DIR})

AC_MSG_CHECKING([for URL to GridSHIB-CA])
default=/${GRIDSHIB_CA_DIR_NAME}/
AC_ARG_WITH(gridshib-ca-url,
	AC_HELP_STRING([--with-gridshib-ca-url=<url>],
		[Specify the URL for the gridshib-ca. This is the relative URL, without hostname, where the main GridShib-CA starting page will be found. (Default: /<gridshib-ca-dir-name>/)]),
	[GRIDSHIB_CA_URL=$withval],
	[GRIDSHIB_CA_URL=$default])
AC_SUBST(GRIDSHIB_CA_URL)
AC_MSG_RESULT(${GRIDSHIB_CA_URL})

AC_MSG_CHECKING([for path to GridShib CA html directory])
AC_ARG_WITH(gridshib-ca-html-dir,
	AC_HELP_STRING([--with-gridshib-ca-html_dir],
		[Specify the direcotry for the gridshib-ca HTML corresponding to the gridshib-ca-url. Default: <www-dir>/html/<gridshib-ca-dir-name>/]),
	[GRIDSHIB_CA_HTML_DIR=$withval],
	[GRIDSHIB_CA_HTML_DIR=${WWW_DIR}/html/${GRIDSHIB_CA_DIR_NAME}/])
AC_SUBST(GRIDSHIB_CA_HTML_DIR)
AC_MSG_RESULT(${GRIDSHIB_CA_HTML_DIR})

AC_MSG_CHECKING([for hostname to use in GridShib CA URLS])
AC_ARG_WITH(www-hostname,
	AC_HELP_STRING([--with-www-hostname],
		[Specify the hostname used in the GridShib CA URL. (Default: <uname -n>)]),
	[WWW_HOSTNAME=$withval],
	[WWW_HOSTNAME=`uname -n`])
AC_MSG_RESULT(${WWW_HOSTNAME})
AC_SUBST(WWW_HOSTNAME)

AC_MSG_CHECKING([for owner of www files])
AC_ARG_WITH(www-user,
	AC_HELP_STRING([--with-www-user],
		[Specify the username that the httpd runs under. (Default: apache)]),
	[WWW_USER=$withval],
	[WWW_USER=apache])
AC_MSG_RESULT(${WWW_USER})
AC_SUBST(WWW_USER)

AC_MSG_CHECKING([for relative DN of generated certificates])
AC_ARG_WITH(relative-dn,
	AC_HELP_STRING([--with-relative-dn],
		[Provide the relative DN for generated certificates. (Default: OU=TEST OU, O=TEST ORG, C=US)]),
	[RELATIVE_DN=$withval],
	[RELATIVE_DN="OU=TEST OU, O=TEST ORG, C=US"])
AC_SUBST(RELATIVE_DN)
AC_MSG_RESULT(${RELATIVE_DN})

dnl ------------------------------------------------------------
dnl CGI-BIN demo scripts.

CGI_DEMO_SCRIPTS=""
AC_ARG_ENABLE(demos,
	AC_HELP_STRING([--enable-demos],
		[Build demos. (Default: Disabled)]),
	[ENABLE_DEMOS=true],
	[ENABLE_DEMOS=false])

if test ${ENABLE_DEMOS} = "true" ; then
   CGI_DEMO_SCRIPTS="\
	webdocs/gridshib-ca-demo-portal.cgi"
   AC_CONFIG_FILES([$CGI_DEMO_SCRIPTS])

   AC_MSG_CHECKING([for path to cgi-bin directory])
   default=${WWW_DIR}/cgi-bin/
   AC_ARG_WITH(cgi-bin-dir,
	AC_HELP_STRING([--with-cgi-bin-dir=<path>],
		[Specify the (unprotected) cgi-bin directory. (Default: <www-dir>/cgi-bin/)]),
	[CGI_BIN_DIR=$withval],
	[CGI_BIN_DIR=$default])
   AC_SUBST(CGI_BIN_DIR)
   AC_MSG_RESULT(${CGI_BIN_DIR})

   AC_PROG_PERL_MODULES([Crypt::OpenSSL::PKCS10])

   AC_GLOBUS_LOCATION()
fi
AC_SUBST(CGI_DEMO_SCRIPTS)

dnl ------------------------------------------------------------
dnl syslog parameters
SYSLOG_ID="GridShib-CA"
AC_SUBST(SYSLOG_ID)
SYSLOG_FACILITY="local0"
AC_SUBST(SYSLOG_FACILITY)

dnl ------------------------------------------------------------
dnl Development mode

dnl Development utilities
DEV_UTILS=""
AC_SUBST(DEV_UTILS)

dnl Bouncy Castle source
BC_SOURCE=""
AC_SUBST(BC_SOURCE)

dnl Configure dependancies
CONFIGURE_DEP=""
AC_SUBST(CONFIGURE_DEP)

if test ${MODE} = "build" ; then

   dnl Enable building of java
   AC_CONFIG_FILES([edu/ncsa/gridshib/gridshibca/Version])

   dnl Programs needed for building java
   AC_PATH_PROG(KEYTOOL, keytool)
   AC_PATH_PROG(JAVAC, javac)
   AC_PATH_PROG(JAR, jar)
   AC_PATH_PROG(JARSIGNER, jarsigner)
   AC_PATH_PROG(TAR, tar)
   AC_PATH_PROG(FIND, find)

   dnl Generate development utilities in dev-utils
   DEV_UTILS="\
	dev-utils/make-release.pl"
   AC_CONFIG_FILES([${DEV_UTILS}])

   dnl Enable regeneration of configure from configure.ac and aclocal.m4
   CONFIGURE_DEP="configure.ac aclocal.m4"

   dnl Generate documentation
   AC_CONFIG_FILES([${DOC_FILES}])

   AC_MSG_CHECKING([for Bouncy Castle source directory])
   AC_ARG_WITH(bc-source-path,
	AC_HELP_STRING([--with-bc-source-path],
		[Provide the path to the Bouncy Castle source]),
	[BC_SOURCE=$withval],
	[BC_SOURCE="FAILED"])
	AC_MSG_RESULT(${BC_SOURCE})

   if test ${BC_SOURCE} = "FAILED"; then
	AC_MSG_ERROR([Could not find Bouncy Castle source path.])
   fi

   dnl Make dev-utils/*.pl executable
   AC_CONFIG_COMMANDS([chmod-dev-utils], [chmod +x dev-utils/*.pl])

   AC_PATH_PROG(CVS, cvs)
   AC_PATH_PROG(MAKE, make)
fi

PERL_DOC_DIR="doc/perl"
AC_SUBST(PERL_DOC_DIR)

dnl ------------------------------------------------------------
dnl Installed path of the configuration file

GRIDSHIB_CA_CONFIG_FILE=${GRIDSHIB_CA_CONF_DIR}/gridshib-ca.conf
AC_SUBST(GRIDSHIB_CA_CONFIG_FILE)

dnl ------------------------------------------------------------
dnl PERL arguments
dnl I would like to put quotes around ${GRIDSHIB_CA_CONF_DIR} here but
dnl they get carried over into @INC and screw up Perl.
PERL_ARGS="-I ${GRIDSHIB_CA_CONF_DIR}/perl"
AC_SUBST(PERL_ARGS)

dnl PERL arguments for CGI-BIN scripts
PERL_CGI_BIN_ARGS="-T -w ${PERL_ARGS}"
AC_SUBST(PERL_CGI_BIN_ARGS)

dnl ------------------------------------------------------------
dnl Make utils/*.pl executable
AC_CONFIG_COMMANDS([chmod-utils], [chmod +x utils/*.pl])

dnl ------------------------------------------------------------
dnl Makefiles
AC_CONFIG_FILES([Makefile])

for subdir in ${SUBDIRS} ; do
    AC_CONFIG_FILES([${subdir}/Makefile])
done

dnl ------------------------------------------------------------
dnl And wrap it up
AC_OUTPUT()
