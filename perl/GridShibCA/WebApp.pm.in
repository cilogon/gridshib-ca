######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::WebApp

Interface for GridShibCA webb applications.

=cut

package GridShibCA::WebApp;

use CGI;
use GridShibCA::Config;
use GridShibCA::ErrorHandler qw(handleError);
use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item new()

Create a webapplication interface object

B<Arguments:> None

B<Returns:> Nothing. Does not return on error.

=cut

sub new
{
    my $class = shift;
    my $self = {};
    bless($self, $class);

    # Run safely
    $ENV{PATH} = "/bin";
    umask (0077);

    try
    {
	$self->{config}  = GridShibCA::Config->new();    
	$self->{logger} = $self->{config}->getLogger();
	$self->{cgi} = CGI->new();
    }
    otherwise
    {
	my $ex = shift;
	handleError("Failed to bootstrap web application",
		    -exception=>$ex);
	# Does not return
    };
    return $self;
}

=item handleRequest()

Read the requested command name from the CGI interface and invoke the
command associated with that name (via invokeCommand()).

B<Arguments:> None

B<Returns:> None

=cut

sub handleRequest
{
    my $self = shift;
    my $commandName = $self->{cgi}->param("command") || "DEFAULT";
    $self->invokeCommand($commandName);
}

=item invokeCommand()

Invoke WebCommand and handle any resulting error.

B<Arguments:> Command name.

B<Returns:> Nothing. Does not return on error.

=cut

sub invokeCommand
{
    my $self = shift;
    my $command = shift ||
	handleError("Undefined command to invokeCommand()");
    $self->{logger}->info("Invoking command %s for %s",
			  $command, $self->{cgi}->remote_addr());
    $self->{logger}->debug("User-Agent: " . $self->{cgi}->user_agent());

    my $module = undef;

    try
    {
	$module = $self->{config}->getCommandModule($command);
    }
    otherwise
    {
	my $ex = shift;
	handleError("Error launching web application $command",
		    -exception=>$ex);
	# Does not return
    };

    try
    {
	$self->{logger}->debug("Calling invoke()");
	$module->invoke();
	$self->{logger}->debug("invoke() completed.");
    }
    otherwise
    {
	my $ex = shift;
	handleError("Uncaught error in web application $command",
		    -exception=>$ex);
	# Does not return
    };
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
