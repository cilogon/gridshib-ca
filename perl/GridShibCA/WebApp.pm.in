#!@PERL@ @PERL_ARGS@
######################################################################
#
# $Id$
#
# Base class for Web Commands.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

=head1 GridShibCA::WebApp

Interface for GridShibCA webb applications.

=cut

package GridShibCA::WebApp;

use CGI;
use GridShibCA::Config;
use GridShibCA::ErrorHandler qw(handleError);
use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item new()

Create a webapplication interface object

B<Arguments:> None

B<Returns:> Nothing. Does not return on error.

=cut

sub new
{
    my $class = shift;
    my $self = {};
    bless($self, $class);

    try
    {
	$self->{config}  = GridShibCA::Config->new();    
	$self->{logger} = $self->{config}->getLogger();
	$self->{cgi} = CGI->new();
    }
    otherwise
    {
	my $ex = shift;
	handleError("Failed to bootstrap web application",
		    -exception=>$ex);
	# Does not return
    };
    return $self;
}

=item handleRequest()

Read the requested command name from the CGI interface and invoke the
command associated with that name (via invokeCommand()).

B<Arguments:> None

B<Returns:> None

=cut

sub handleRequest
{
    my $self = shift;
    my $commandName = $self->{cgi}->param("command") || "DEFAULT";
    $self->{logger}->debug("Got client request for %s", $commandName);
    $self->invokeCommand($commandName);
}

=item invokeCommand()

Invoke WebCommand and handle any resulting error.

B<Arguments:> Command name.

B<Returns:> Nothing. Does not return on error.

=cut

sub invokeCommand
{
    my $self = shift;
    my $command = shift ||
	handleError("Undefined command to invokeCommand()");
    $self->{logger}->info("Invoking command %s for %s",
			  $command, $self->{cgi}->remote_addr());
    my $module = undef;

    try
    {
	$module = $self->{config}->getCommandModule($command);
    }
    otherwise
    {
	my $ex = shift;
	handleError("Error launching web application $command",
		    -exception=>$ex);
	# Does not return
    };

    try
    {
	$self->{logger}->debug("Calling invoke()");
	$module->invoke();
	$self->{logger}->debug("invoke() completed.");
    }
    otherwise
    {
	my $ex = shift;
	handleError("Uncaught error in web application $command",
		    -exception=>$ex);
	# Does not return
    };
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@ ($Id$)

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
