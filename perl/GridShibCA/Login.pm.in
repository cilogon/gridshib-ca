#!@PERL@ @PERL_ARGS@
######################################################################
#
# $Id$
#
# Login command to establish session from Web Sign-on.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

=head1 GridShibCA::WebCommand

Login command to establish session from web sign-on.

=cut

package GridShibCA::Login;


# Inherit WebCommand
use GridShibCA::WebCommand;
@ISA = ("GridShibCA::WebCommand");

=head2 Methods

=over 4

=item invoke()

Invoke the command.

B<Arguments:> Request object

B<Returns:> True on success, False on error.

=cut

sub invoke
{
    my $self = shift;
    my $request = shift;

    # For convienence
    my $config = $self->{config};
    my $logger = $self->{logger};
    
    my $webSignOn = $config->getWebSignOn();
    if (!defined($webSignOn))
    {
	$self->_handleError("Failed to load WebSignOn module: %s",
			    $config->getError());
	return 0;
    }

    if (!$webSignOn->init())
    {
	$self->_handleError("Error with sign-on: %s", $webSignOn->getError());
	return 0;
    }

    my $authorization = $config->getAuthorization();
    if (!defined($authorization))
    {
	$self->_handleError("Failed to load Authorization module: %s",
			    $config->getError());
	return 0;
    }

    if (!$authorization->authorize($webSignOn))
    {
	$logger->err("Authorization failed for user \"%s\" from \"%s\": %s",
		     $webSignOn->getUserId(),
		     $webSignOn->getIdPId());
	$self->_handleError("Authorization failed.");
	return 0;
    }


    my $session = $config->getCGISession();
    if (!defined($session))
    {
	$self->_handleError("Failed to load CGISession module: %s",
			    $config->getError());
	return 0;
    }

    if (!$session->saveWebSignOn($webSignOn))
    {
	$self->_handleError("Failed to save WebSignOn: %s",
			    $session->errstr());
	return 0;
    }

    $logger->info("New session(%s) created for user \"%s\" from \"%s\"",
		  $session->id(),
		  $webSignOn->getUserId(),
		  $webSignOn->getIdPId());

    if (!$self->_displayHTML("login.html"))
    {
	$self->_handleError("Failed to display HTML \"login.html\"");
	return 0;
    }

    return 1;
}


=item requiresSession()

Returns True if the command requires an established session.

B<Arguments:> None

B<Returns:> True if request requires session, False otherwise.

=cut

sub requiresSession
{
    my $self = shift;
    # We are going to be establishing a session, so don't require one.
    return 0;
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@ ($Id$)

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
