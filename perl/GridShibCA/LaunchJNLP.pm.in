######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::LaunchJNLP

Handles generation of jnlp file to launch Java Web Start application

=cut

package GridShibCA::LaunchJNLP;

# Inherit WebCommand
use base qw(GridShibCA::LaunchClient);

use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item _getTemplate()

Return the Template object.

B<Arguments:> None

B<Returns:> Template object

=cut

sub _getTemplate
{
    my $self = shift;
    return $self->{config}->getTemplate("JNLPTemplate");
}

=item _generateHeader()

Generate the header string for the JNLP file.

B<Arguments:> None

B<Returns:> Header string for JNLP file.

=cut

sub _generateHeader
{
    my $self = shift;
    my $cgi = $self->{cgi};

    my %headerArgs = (
        -type=>"Application/X-Java-Jnlp-File"
        );

    # The attachment option is required for Camino (at least) to do the
    # right thing.  However, this option seems to always cause Firefox to
    # ask what to do with the jnlp file, so we do not use it for FireFox.
    # Note that some Camino user-agent strings contain "like Firefox" hence
    # the apparently overly complex logic here.  See
    # https://bugzilla.mcs.anl.gov/globus/show_bug.cgi?id=6719
    if ($cgi->user_agent("Mozilla") and !$cgi->user_agent("Camino"))
    {
        # Firefox - do nothing
    }
    else
    {
        # Not Firefox
        $headerArgs{"-attachment"} = "launch.jnlp";
    }

    my $header = $cgi->header(\%headerArgs);

    return $header;
}



=item _setTemplateMappings()

Should be overridden by client class if it wants to add additional
mappings to template processing.

B<Arguments:> Template object

B<Returns:> Nothing

=cut

sub _setTemplateMappings
{
    my $self = shift;
    my $template = shift;

    $self->SUPER::_setTemplateMappings($template);
    my $codebase =
        $self->{cgi}->url(-base => 1) .
        $self->{config}->getParam("GridShibCAURL");
    # Fetch JNLP file via http to avoid JWS security warning
    $codebase =~ s/^https/http/;
    my @Arguments = ();
    try
    {
        my $provideTrustRoots = $self->{cgi}->param("DownloadTrustroots");
        push(@Arguments, "DownloadCAs=$provideTrustRoots");
    }
    otherwise
    {
        my $ex = shift;
        $self->{logger}->debug("Error getting ProvideTrustRoots: ".$ex->text());
    };
    my $lifetime = $self->{cgi}->param("RequestedLifetime");
    if (defined($lifetime))
    {
        push(@Arguments, "lifetime=$lifetime");
    }
    $template->addMapping("Arguments", \@Arguments);
    $template->addMapping("CodeBase", $codebase);
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
