#!@PERL@ @PERL_ARGS@
######################################################################
#
# $Id$
#
# Logon WebCommand.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

=head1 GridShibCA::Logon

Handles conversion of WebSignOn to internal session and directs
user to gsca.cgi

=cut

package GridShibCA::Logon;

# Inherit WebCommand
use base qw(GridShibCA::WebCommand);

use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item doCommand()

Override base class with my specific logic.

B<Arguments:> None

B<Returns:> True on success, False on error.

=cut

sub doCommand
{
    my $self = shift;
    
    $self->{logger}->info("Connection from %s", $self->{cgi}->remote_addr());

    my %mappings = ();
    my $signon = $self->{config}->getWebSignOn();
    $self->{logger}->debug("Performing %s sign-on", $signon->methodName());
    $signon->init();
    $self->{logger}->debug("Sign-on complete: UserId=%s IdPId=%s",
			   $signon->getUserId(), $signon->getIdP());
    $self->doLogon($signon);
    $self->_displayHTML("LogonTemplate", %mappings);
}

=item doLogon()

Given a WebSignOn object, authorize and create a session.

B<Arguments:> WebSignOn object

B<Returns:> Nothing. Throws GridShibCA::Exception or descendant on error.

=cut

sub doLogon
{
    my $self = shift;
    my $signon = shift ||
	throw GridShibCA::Exception("signon undefined");

    $self->{logger}->debug("Authorizing signon.");
    my $authorization = $self->{config}->getAuthorization();
    $authorization->authorizeSignon($signon);
    $self->{logger}->debug("Authorization complete.");

    $self->{logger}->debug("Creating session.");
    my $session = $self->{config}->getCGISession();
    $session->createNew();
    $session->fromWebSignOn($signon);
 
    $self->_addCookie($session->cookie());
    $self->{session} = $session;

    return 1;
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@ ($Id$)

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
