######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::Logon

Handles conversion of WebSignOn to internal session and directs
user to gsca.cgi

=cut

package GridShibCA::Logon;

# Inherit WebCommand
use base qw(GridShibCA::WebCommand);

use GridShibCA::Exception qw(:try);
use GridShibCA::UserIdentity;

=head2 Methods

=over 4

=item doCommand()

Basic logic common to many Logon methods.

B<Arguments:> None

B<Returns:> True on success, False on error.

=cut

sub doCommand
{
    my $self = shift;

    try {
	$self->{logger}->debug("Logon module %s invoked.", ref($self));
	$self->_init();
	$self->{logger}->info("Performing %s logon from %s",
			      $self->getMethodName(),
			      $self->getClientHost());
	my %mappings = ();
	my $id = $self->_createUserIdentity();
	$self->{logger}->debug("Logon complete: UserId=%s IdPId=%s",
			       $id->userId(), $id->idpId());
	my $session = $self->_doLogon($id);
	$self->_displayHTML("LogonTemplate", %mappings);
    }
    otherwise
    {
	my $ex = shift;
	$self->{logger}->logException($ex);
	my $msg = $ex->text() || "Unknow error (see server logs)";
	$self->_displayHTMLError("Error performing login: $msg");
    };
    return 1;
}


=item getUserId()

Return the unchecked, tainted user id as reported by sign-on system.

Should be implemented by child class.

B<Arguments:> None

B<Returns:> User id as string, or undef if unknown

=cut

sub getUserId
{
    my $self = shift;
    throw GridShibCA::LogonException("Undefined getUserId() method.");
}

=item getIdP()

Returns the unchecked, tainted identity provider identifier.

Should be immplemented by child class.

B<Arguments:> None

B<Returns:> IdP as string, or undef if unknown

=cut

sub getIdP
{
    my $self = shift;
    throw GridShibCA::LogonException("Undefined getIdP() method.");
}

=item getClientHost

B<Arguments:> None

B<Returns:> Client hostname or (if hostname unavailable) IP address
as string.

=cut

sub getClientHost
{
    my $self = shift;
    return $self->{cgi}->remote_host();
}

=item getMethodName

Return human-readable string identifying sign-on method.

B<Arguments:> None

B<Returns:> String identifying sign-on method.

=cut

sub getMethodName
{
    my $self = shift;
    throw GridShibCA::LogonException("Undefined getMethodName() method.");
}

=back

=cut

######################################################################

=head2 Internal methods

These internal methods not intended for external use.

=over 4

=item _init()

Check and make sure everyting is OK.

Should be overridden by child class.

B<Arguments:> None

B<Returns:> Nothing. Throws GridShibCA::LogonException on error.

=cut

sub _init
{
    my $self = shift;
}

=item _createUserIdentity()

Create a GridShibCA::UserIdentity object from Logon.

B<Arguments:> None

B<Returns:> GridShibCA::UserIdentity instance.

=cut

sub _createUserIdentity
{
    my $self = shift;
    return GridShibCA::UserIdentity->new(
	-authMethod => $self->getMethodName(),
	-userId => $self->getUserId(),
	-idpId => $self->getIdP(),
	-clientHost => $self->getClientHost());
}


=item _doLogon()

Given an UserIdentity object, authorize and create a session.

B<Arguments:> UserIdentity object

B<Returns:> GridShibCA::CGISession.

Throws GridShibCA::Exception or descendant on error.

=cut

sub _doLogon
{
    my $self = shift;
    my $id = shift ||
	throw GridShibCA::Exception("Missing id argument");

    $self->{logger}->debug("Authorizing logon.");
    my $authorization = $self->{config}->getAuthorization($id);
    $authorization->isAuthorized();
    $self->{logger}->debug("Authorization complete.");

    $self->{logger}->debug("Creating session.");
    my $session = $self->{config}->getCGISession();
    $session->createNew();
    $session->fromUserIdentity($id);
 
    $self->_addCookie($session->cookie());
    $self->{session} = $session;

    # Add our CSRF protection cookie
    my $csrf = $self->{config}->getCSRF();
    $self->_addCookie($csrf->createCookie());

    return $session;
}


=back

=cut

######################################################################

package GridShibCA::LogonException;

# Inherit GridShibCA::Exception
use base qw(GridShibCA::Exception);

=head1 GridShibCA::LogonException

Class for exceptions caused by Logon errors.

=cut

######################################################################

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
