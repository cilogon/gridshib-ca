######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::DisplayTemplate

Display the template as specified by the I<template> argument of its
configuration. E.g.:

  <Commands>
    <Debug>
      class = GridShibCA::DisplayTemplate
      template = DebugTemplate
    </Debug>
  </Commands>

=cut

package GridShibCA::DisplayTemplate;

# Inherit WebCommand
use base qw(GridShibCA::WebCommand);

use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item doCommand()

Override base class with my specific logic.

B<Arguments:> Hash with arguments from gridshib-ca.conf

Values used:

C<template>: Name of template to display.

C<addCSRF>: If set to "true", adds CSRF cookie to output.

B<Returns:> True on success, False on error.

=cut

sub doCommand
{
    my $self = shift;
    my $args = $self->{args};
    if (!defined($args->{template}))
    {
        throw GridShibCA::ConfigException(
            "Template element for DisplayTemplate missing.");
    }
    my $templateName = $args->{template};
    my $addCSRF = $args->{addCSRF};
    # Note Config automatically converts "true" to 1
    if (defined($addCSRF) and ($addCSRF = 1))
    {
        $self->{logger}->debug("Adding CSRF cookie to displayed template");
        my $csrf = $self->{config}->getCSRF();
        $self->_addCookie($csrf->createCookie());
    }
    my %mappings = ();
    $self->_displayHTML($templateName, %mappings);
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
