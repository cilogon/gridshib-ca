######################################################################
#
# $Id$
#
# Logging functions.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

=head1 GridShibCA::Logger

Interface to logging based on Perl Sys::Syslog Module.

=head2 Configuration Parameters

This class uses the following values from F<gridshib-ca.conf>:

=over 4

=item SyslogId

Identifying string to use with Syslog.

=item SyslogFacility

Facility to use with Syslog.

=back

=cut

package GridShibCA::Logger;

use Sys::Syslog;
use File::Basename;

use GridShibCA::Config;

=head2 Methods

=over 4

=item new()

Create a new Logger object.

B<Arguments:> None

B<Returns:> Logger instance

=cut

sub new
{
    my $class = shift;
    my $self = {};

    my $config = GridShibCA::Config->new();

    # Syslog parameters
    my $SYSLOG_ID = $config->getParam("SyslogId");
    my $SYSLOG_OPTS = "pid";
    my $SYSLOG_FACILITY = $config->getParam("SyslogFacility");

    my $id = sprintf("%s (%s)", $SYSLOG_ID, basename($0));
    openlog($id, $SYSLOG_OPTS, $SYSLOG_FACILITY);
    $self->{debug} = $config->getParamBoolean("debug");
    bless($self, $class);
    return $self;
}

=item log()

Log a message.

B<Arguments:>

I<$level> - one of "info", "warn", "err"

I<$format, @args> - as would be presented to sprintf()

B<Returns:> Nothing

=cut

sub log
{
    my $self = shift;
    my $level = shift;
    my $format = shift;
    my @args = @_;
    syslog($level, $format, @args);
}

=item info()

Log an informative message

B<Arguments:>

I<$format, @args> - as would be presented to sprintf()

B<Returns:> Nothing

=cut

sub info
{
    my $self = shift;
    $self->log("info", @_);
}


=item debug()

Log an debugging message if so configured.

B<Arguments:>

I<$format, @args> - as would be presented to sprintf()

B<Returns:> Nothing

=cut

sub debug
{
    my $self = shift;
    if ($self->{debug})
    {
	$self->log("info", @_);
    }
}


=item err()

Log an error message

B<Arguments:>

I<$format, @args> - as would be presented to sprintf()

B<Returns:> Nothing

=cut

sub err
{
    my $self = shift;
    $self->log("err", @_);
}


=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@ ($Id$)

=cut

# Return true for import/use
1;

### Local Variables: ***
### mode:perl ***
### End: ***
######################################################################
