######################################################################
#
# $Id$
#
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

=head1 GridShibCA::CertRegistry.pm

Interface for certificate registry, used to record issued
certificates.  This implementation records the all certificates in the
directory specified by the configuration parameter I<CertRegistryDir>
using a filename that is a concatenation of the DN hash and the
current timestamp (which is not the issuance instance).

Other implementations include: L<GridShibCA::myVocsDBCertRegistry|GridShibCA::myVocsDBCertRegistry>

=head2 Configuration Parameters

This class uses the following values from F<gridshib-ca.conf>:

=over 4

=item CertRegistryDir

Directory in which to store certificates.

=back

=cut

package GridShibCA::CertRegistry;

use File::Spec;
use FileHandle;

use GridShibCA::Config;

=head2 Methods

=over 4

=item new()

Create a new CertRegistry object.

B<Arguments:> None

B<Returns:> CertRegistry instance

=cut

sub new
{
    my $class = shift;
    my $self = {};
    $self->{config} = GridShibCA::Config->new();
    bless($self, $class);
    return $self;
}

=item registerCert()

Record an issued certificate.

B<Arguments:>

C<$session> - CGISession object.

C<$certificate> - Certificate as use Crypt::OpenSSL::X509 object.

B<Returns:> Nothing. Throws GridShibCA::CertRegistryException on error.

=cut

sub registerCert()
{
    my $self = shift;
    my $session = shift ||
	throw GridShibCA::CertRegistryException("Missing session argument");
    my $x509 = shift ||
	throw GridShibCA::CertRegistryException("Missing certificate argument");

    my $userId = $session->param("UserId");
    my $idp = $session->param("IdP");
    my $dn = $x509->subject();
    my $serial = $x509->serial();
    my $hash = $x509->hash();
    my $timeString = localtime();
    my $timeSeconds = time();
    # TODO: $x509->notAfter() returns a string of the form "Jun 20
    # 11:50:06 2009 GMT". Convert to seconds with Date::Parse
    my $expires = $x509->notAfter();
    my $certPem = $x509->as_string();

    my $registryDir = $self->{config}->getParam("CertRegistry", "Path");

    if (! -d $registryDir)
    {
	mkdir($registryDir, 0700) ||
	    throw GridShibCA::CertRegistryException(
		"Could not create certificate registry directory (%s): %s",
		$registryDir, $!);
    }

    # Hash is tainted, so must untaint before using in filename
    if ($hash =~ /^(\w+)$/)
    {
	$hash = $1;
    }
    else
    {
	throw GridShibCA::CertRegistryException("Illegal characters in hash: \"$hash\"");
    }

    my $certFilename = File::Spec->catfile($registryDir,
					   $hash . "." . $timeSeconds);
    my $certFile = new FileHandle;
    $certFile->open(">$certFilename") ||
	throw GridShibCA::CertRegistryException(
	    "Could not open certificate file (%s): %s",
	    $certFilename, $!);

    print $certFile <<"EOF";
User: $userId
IdP: $idp
DN: $dn
Serial: 0x$serial
Time: $timeString
Seconds: $timeSeconds
Expires: $expires

$certPem
EOF
}

=back

=cut

######################################################################

package GridShibCA::CertRegistryException;

# Inherit GridShibCA::Exception
use base qw(GridShibCA::Exception);

=head1 GridShibCA::CertRegistryException

Class for exceptions caused by certificate registration errors.

=cut

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@ ($Id$)

=cut

# Return true for import/use
1;

### Local Variables: ***
### mode:perl ***
### End: ***
######################################################################
