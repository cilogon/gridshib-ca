######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::LaunchClient

Stub to handle generation of scripts/files (e.g. jnlp file) for GSCA
clients.

=cut

package GridShibCA::LaunchClient;

# Inherit WebCommand
use base qw(GridShibCA::WebCommand);

use GridShibCA::ErrorHandler qw(handleError);
use GridShibCA::Exception qw(:try);

=head2 Methods

=over 4

=item doCommand()

Parse template and create output.

B<Arguments:> None

B<Returns:> True on success, False on error.

=cut

sub doCommand
{
    my $self = shift;

    try
    {
	$self->{clientSession} = $self->{session}->createClientSession();
    }
    otherwise
    {
	my $ex = shift;
	handleError("Error creating client session", -exception=>$ex);
    };

    try
    {
	my $header = $self->_generateHeader();
	my $text = $self->_generateText();

	print $header . "\n\n";
	print $text;
    }
    otherwise
    {
	my $ex = shift;
	handleError("Error rendering output", -exception=>$ex);
    };

    # Success
    return 1;
}


=item _requirements()

Return protection requirements of this command.

B<Arguments:> None

B<Returns:> Requirements value

=cut

sub _requirements
{
    return
	$GridShibCA::WebCommand::REQUIRE_SESSION |
	$GridShibCA::WebCommand::REQUIRE_CSRF_CHECK;
}

=item _getTemplate()

Return the Template object. Should be overridden by child class.

B<Arguments:> None

B<Returns:> Template object

=cut

sub _getTemplate
{
    raise GridShibCA::Exception("Abstract method called.");
}

=item _generateHeader()

Generate the header string for the output file. Should be overridden
by client class.

B<Arguments:> None

B<Returns:> Header string for JNLP file.

=cut

sub _generateHeader
{
    my $self = shift;
    my $cgi = $self->{cgi};

    my $header = $cgi->header();

    return $header;
}

=item _generateText()

Generate text from template.

B<Arguments:> None.

B<Returns:> Text as string

=cut

sub _generateText
{
    my $self = shift;

    my $template = $self->_getTemplate();
    $self->_setTemplateMappings($template);
    
    return $template->getText();
}

=item _setTemplateMappings()

Should be overridden by client class if it wants to add additional
mappings to template processing.

B<Arguments:> Template object

B<Returns:> Nothing

=cut

sub _setTemplateMappings
{
    my $self = shift;
    my $template = shift;

    $template->addSectionAsMappings("LaunchClient");
    $template->addMappings("WebAppURL",
			   $self->{config}->getParam("URLs",
						     "WebApp"));
    $template->addMapping("AuthenticationToken",
			  $self->{clientSession}->id());
}

=back

=head1 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
