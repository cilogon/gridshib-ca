######################################################################
#
# This file is part of the GriShib-CA distribution.  Copyright
# 2006-2009 The Board of Trustees of the University of
# Illinois. Please see LICENSE at the root of the distribution.
#
######################################################################

=head1 GridShibCA::PHPSessionMySQL

This module subclasses the PHP::Session module to override the
_slurp_content subroutine so that PHP session data can be read from MySQL
rather than from file.

=cut

package GridShibCA::PHPSessionMySQL;

# Inherit PHP::Session
use base qw(PHP::Session);

# Use the following for reading PHP session from file
use FileHandle;
use File::Spec;

# Use the following for reading PHP session from database/dbService servlet
use LWP::UserAgent;
use URI::Escape;
use MIME::Base64::URLSafe qw(urlsafe_b64decode);

=head2 Methods

=over 4

=item _slurp_content

Returns the PHP session data from a MySQL database or from a file.
Set the local variable $usemysql=1 for MySQL, 0 for file.

B<Arguments:> None

B<Returns:> The PHP session data.

=cut

sub _slurp_content {
    my $self = shift;

    my $retval = undef;
    my $usemysql = 0;

    if ($usemysql) {  # Read PHP session data from MySQL
        my $id = $self->id;
        my $browser = LWP::UserAgent->new();
        $browser->timeout(30);
        my $resp = $browser->get("http://localhost:8080/oauth/dbService?" .
                   "action=getPHPSession&id=" . uri_escape($id) );
        if ((defined($resp)) && (defined($resp->content)) && 
            ($resp->code == 200)) {
            my $status = 1;
            ($resp->content =~ /status=([^\r\n]+)/) && ($status = $1);
            if (!($status & 1)) { # All STATUS_OK codes are even
                my $data = "";
                if ($resp->content =~ /data=([^\r\n]+)/) {
                    $data = $1;
                }
                if (length($data) > 0) {
                    $retval = urlsafe_b64decode($data);
                }
            }
        }
    } else {  # Read PHP session data from file
        my $handle = FileHandle->new($self->_file_path) or return;
        binmode $handle;
        flock $handle, LOCK_SH;
        local $/ = undef;
        $retval = <$handle>;
        $handle->close;
    }

    return $retval;
}

=back

=head2 Version

GridShib-CA version @PACKAGE_VERSION_STRING@

=cut

# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
