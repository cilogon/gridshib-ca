#
# GridShib CA configuration file
#
# Everything after a "#" is a comment.
#
# Use /usr/local/gridshib-ca-2.0.1/check-config.pl
# to validate file after changing.

# Format version of this configuration file
ConfigVersion = 2

######################################################################
#
# General Configuration
#

# Set to "true" to enable debugging on server
debug = false

# Contact address for this deployment
ContactAddress = help@cilogon.org

# GridShib CA configuration directory
GridShibCAConfDir = /usr/local/gridshib-ca-2.0.1

# The following two values are used in more than one of the following
# blocks, so they are at the top level.

# Relative URL for GridShibCA web space
GridShibCAURL = /gridshib-ca-2.0.1/

# Relative URL for Shibboleth-protected web space
ShibProtectedURL = /secure/gridshib-ca-2.0.1

<Templates>
  # Templates for output to client.
  Path = ${GridShibCAConfDir}/templates

  ErrorTemplate = ${Path}/error.html
  
  JNLPLaunchTemplate = ${Path}/jnlp-launch.html

  JNLPLaunchFormTemplate = ${Path}/jnlp-launch-form.html

  LogonTemplate = ${Path}/login.html

  LogoutTemplate = ${Path}/logout.html

  DebugTemplate = ${Path}/debug.html

  PythonClientTemplate = ${Path}/python.html

  OpenIdCancel = ${Path}/openid-cancel.html

  OpenIdSuccess = ${Path}/login.html

  OpenIdLogonForm = ${Path}/openid-logon-form.html

  SessionExpired = ${Path}/session-expired.html

  SessionMissing = ${Path}/session-missing.html

  # JNLP file template used by launchGSCA.jnlp
  JNLPTemplate = ${Path}/GSCA.jnlp
</Templates>

<Modules>
  # Perl Modules
  # These control what PERL modules the GridShib-CA uses. These can
  # be changed to install local modules.

  # Perl module to authorize actions
  Authorization = GridShibCA::Authorization

  # Perl module to use for CA
  CA = GridShibCA::MyProxyCACILogon

  # Perl module for registering issued certificates
  CertRegistry = GridShibCA::CertRegistry

  # Perl module to use for CGI interface
  CGI = GridShibCA::CGIinterface

  # Perl module to use for CGI interface
  CGISession = GridShibCA::CGISession

  # Perl module to execute processes
  Command = GridShibCA::Command

  # Perl module to provide CSRF protection
  CSRF = GridShibCA::CSRF

  # Perl module to produce HTML error mesages
  HTMLError = GridShibCA::HTMLError

  # Perl module to produce HTML from templates
  HTMLTemplate = GridShibCA::HTMLTemplate

  # Perl module to use for logging
  Logger = GridShibCA::Logger

  # Perl module to use to map Shibboleth id/attributes to X.509 DN
  NameMapper = GridShibCA::NameMapper

  # Perl module to use to parse and dispatch user request
  Request = GridShibCA::Request 

  # Perl module to use to generate SAML extension
  SAMLExtension = GridShibCA::SAMLExtension

  # Perl module to produce text from templates
  Template = GridShibCA::Template

  # Base module for Web Applications
  WebCommand = GridShibCA::WebCommand

</Modules>

<Commands>
  # Modules invokable by GridShibCA.cgi

  # No command given, what command should be execute?
  DEFAULT = Debug
  <Debug>
    class = GridShibCA::DisplayTemplate
    template = DebugTemplate
    # Add CSRF cookie for ShibLaunchGSCA.jnlp
    addCSRF = true
    requirements = session_optional
  </Debug>

  <IssueCert>
    # Accept and sign a certificate request
    class = GridShibCA::IssueCert
  </IssueCert>

  <JNLPLaunch>
    class = GridShibCA::JNLPForm
  </JNLPLaunch>

  <PythonClient>
    # Allow for download of Python client
    class = GridShibCA::PythonClient
  </PythonClient>

  <TrustRoots>
    # Download trust roots
    class = GridShibCA::TrustRoots
  </TrustRoots>

  <Logout>
    class = GridShibCA::Logout
  </Logout>
</Commands>

<AuthMethods>
  # List of all authentication methods and their end points
  Shibboleth = ${ShibProtectedURL}/shib.cgi
  OpenId = ${GridShibCAURL}/openid.cgi
</AuthMethods>

<OpenId>
  # Path to OpenId files
  Path = ${GridShibCAConfDir}/openid

  # File with consumer secret for OpenId. Should be <= 255 characters.
  # Changing on the fly will result in any OpenId logons in progress
  # failing.
  ConsumerSecretFilename = ${Path}/openid-consumer-secret
</OpenId>

<Authorization>
  # Path to configuration files
  Path = ${GridShibCAConfDir}/conf

  # Our Policy file
  PolicyFilename = ${Path}/policy.conf
</Authorization>

<CredRetrieverClients>
  JavaWebStart = ${GridShibCAURL}/shibCILaunchGSCA.jnlp
</CredRetrieverClients>

<LaunchClient>
  # This section contains mappings that will be made in any scripts/
  # configuration files (e.g. JNLP file) that launch GSCA clients.

  # Jar for JWS client
  JarName = GridShibCA-2.0.1.jar

  # The jar file includes a bundle of CA certificates (i.e. a
  # trustStore). Should the client use this bundle to validate the https
  # connection back to the GridShib-CA, or should it use the default JWS
  # trust store? The latter has the benefit that if the CA that signed
  # the web server certificate isn't recognized, the user will be
  # prompted if they want to trust the web site.
  UseBundledCAs = true

  # When a user requests a certificate with a lifetime greater than
  # MaxCleartextLifetime, the user will be prompted to enter a passphrase to
  # encrypt the private key.  This value is in seconds and defaults to the
  # standard as defined by IGTF, 1 million seconds ~= 11.57 days.
  MaxCleartextLifetime = 1000000

  # When the user is prompted for a passphrase to encrypt the certificate
  # private key, this value specifies the minimum length for that
  # passphrase.  Note that certain Java distributions may not allow for
  # passphrases greater than 7 characters in length, or installation of the
  # JCE Unlimited Strength Jurisdition Policy Files as documented at
  # http://www.ngs.ac.uk/tools/jcepolicyfiles .
  MinPassphraseLength = 12
</LaunchClient>

<URLs>
  # Relative URL for GridShibCA web space
  GridShibCA = ${GridShibCAURL}

  # URL for the GridShibCA.cgi webapp
  WebApp = https://cilogon.org///gridshib-ca//GridShibCA.cgi
</URLs>

<Binaries>
  # Globus Location to use (not actually used at the moment)
  GlobusLocation = @GLOBUS_LOCATION@

  # OpenSSL binary to use
  OpenSSL = /usr/bin/openssl

  # JAVA_HOME (needed for inclusion of SAML)
  JavaHome = /usr/lib/jvm/java

  # Path to GridShib SAML Tools install (needed for inclusion of SAML)
  GridShibSAMLToolsPath = /usr/local/gridshib-saml-tool-0_1_3/
</Binaries>

<Session>
  # Parameters related to client sessions

  # Default lifetime in seconds for web browser client
  DefaultLifetime = 3600

  # Credential Retriever client lifetime
  CredentialRetrieverClientLifetime = 300

  # Cookie/Parameter name
  # NOTE: Do not change this at this time. Credential retriever
  # clients are still hard-coded.
  Name = GRIDSHIBCA_SESSION_ID

  # Directory in which to store sessions
  Directory = /var/run/gridshib-ca
</Session>

<TrustRoots>
  # Trust roots to provide to clients

  # Do we provide trust roots to clients?
  ProvideTrustRoots = true

  # Directory of trusted CA certificates to pass to client
  TrustRootsPath = /etc/grid-security/certificates
</TrustRoots>

<CA>
  # CA Parameters
  # Parameters related to certificate signing.

  # Default credential lifetime in seconds (12 hours)
  DefaultCredLifetime = 43200

  # Maximum credential lifetime in seconds (13 months)
  MaximumCredLifetime = 34257600
</CA>

<OpenSSLCA>
  # Parameters specific to the OpenSSL-based CA

  # Path OpenSSL static files
  Path = ${GridShibCAConfDir}/openssl-ca

  # Path to runtime files
  RuntimePath = ${GridShibCAConfDir}/openssl-ca-runtime

  # Binary to use
  Program = ${Path}/openssl-ca

  # Certificate for OpenSSL-based CA
  CACert = ${Path}/gridshib-ca-cert.pem

  # Certificate for OpenSSL-based CA
  CAKey = ${Path}/gridshib-ca-key.pem

  # Serial number file for OpenSSL-based CA
  SerialFile = ${RuntimePath}/serial

  # File to use to lock access for running openssl to issue a certificate
  # Only us this file for locking as it is overwritten as zero-length
  # file for each lock.
  LockFile = ${RuntimePath}/openssl-ca.lock

  # Where OpenSSL can store its random state
  RandFile = ${RuntimePath}/openssl-random-state

  # Include Shibboleth SAML assertion in certificate
  # If true, need to set JavaHome and GridShibSAMLToolsPath in <Binaries>
  IncludeSAMLInCert = false
</OpenSSLCA>

<CertRegistry>
  # Configuration for CertRegistry.pm

  # Directory to store issued certificates in
  Path = ${GridShibCAConfDir}/certs/
</CertRegistry>

<MyProxyCA>
  # Configuration for MyproxyCA client (if in use)
  Path = ${GridShibCAConfDir}/myproxy/
  Server = myproxy.cilogon.org
  Port = 7512
  ClientCert = /var/www/config/hostcred.pem
  ClientKey = /var/www/config/hostcred.pem
</MyProxyCA>

<Syslog>
  # Cofiguration for syslog
  Id = GridShib-CA
  Facility = local0
  Opts = pid
</Syslog>

