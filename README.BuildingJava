-*- mode: text -*-
----------------------------------------------------------------------
README.Developing

This file discusses extra steps you need to do if you want to do
GridShib-CA development or build distributions. This includes
compiling the jar files and docbook-based documentation.

----------------------------------------------------------------------

1) Download the BouncyCastle JCE

Note that you need a copy of this source dedicated to the GridShib-CA
(i.e. nothing else is using it). The reason for this is that the
GridShib-CA make process builds just the source it needs and then
includes the class files in its jar. If you use the BouncyCastle
source for something else, you will end up with GridShib-CA jars that
are much bigger than they need to be. (If you do use it, use can use
'make bc-clean' from the gridshib-ca directory to remove all the
compiled files and make it suitable for the gridshib-ca to use.)

Go to the BouncyCastle web site and find the latest releases:

http://www.bouncycastle.org/latest_releases.html

Look for the source for the "JCE with provider and lightweight API "
for the particular JDK you have installed, e.g.:

http://www.bouncycastle.org/download/bcprov-jdk16-141.tar.gz

Unpack this file somewhere:

% cd /some/path
% wget http://www.bouncycastle.org/download/bcprov-jdk16-141.tar.gz
% tar xvfz bcprov-jdk16-141.tar.gz
% cd bcprov-jdk16-141
% unzip src.zip

Pass this path into the GridShib-CA configuration step. E.g.:

% cd gridshib-ca
% ./configure [other options] --enable-build --with-bc-source-path=/some/path/bcprov-jdk16-141/

----------------------------------------------------------------------

2) Make sure you have the JNLP Developer's Pack

Per
http://java.sun.com/javase/technologies/desktop/javawebstart/download-jnlp.html:

"There is no longer a separate JNLP Developer's Pack for Java Web
Start versions 1.5.0 and beyond. The jardiff tool, jnlp-servlet.jar
file, and jnlp.jar file can be found in the samples directory of the
JDK. "

What you need for the GridShib-CA is the jnlp.jar file. This should be
included in the "sample/jnlp/servlet/" directory under the JDK
install.

% ls ${JAVA_HOME}/sample/jnlp/servlet/
GNUmakefile  jardiff.jar  jnlp.jar  jnlp-servlet.jar  README  src

Add this directory to your CLASSPATH:

export CLASSPATH=${CLASSPATH}:${JAVA_HOME}/sample/jnlp/servlet/jnlp.jar

Special note for MacOSX: Instead of jnlp.jar, use javaws.jar, which
seems to be at ${JAVA_HOME}/lib/javaws.jar

----------------------------------------------------------------------

3) Have a credential to sign the jar file

You will need a credential in PKCS12 format to sign the jar. Details
on how to create this PKCS12 file can be found under "Adding CA
Certificates for the Web Server" in the GridShib-CA documentation:

http://gridshib.globus.org/docs/gridshib-ca/

----------------------------------------------------------------------

4) Have xsltproc installed for documentation generation

You will need to have a functional xsltproc and docbook grammar sheets
installed to make a GridShib-CA distribution.

How to install xsltproc is system-specific, please use google to find
some directions or this link is a good starting place (you may be able
to use fink, apt-get or some easier package option):

http://www.sagehill.net/docbookxsl/InstallingAProcessor.html

Now you will need the docbook grammar and transformation files. From
the DocBook sourceforge project, download the latest "docbook-xls"
package (the "docbook-xls-ns" and "docbook-xls-doc" packages won't
work):

http://sourceforge.net/project/showfiles.php?group_id=21935

And install on your local system:

# mkdir -p /usr/local/share/xml/xsl/
# cd /usr/local/share/xml/xsl/
# tar xvfz /tmp/docbook-xsl-1.74.0.tar.gz 
# ln -s docbook-xsl-1.74.0/ docbook-xsl

By default, the GridShib-CA configure script will look for the style
sheet under /usr/local/share/xml/xsl/. If you use a different path,
pass that path to configure when you run it:

configure --enable-build --with-xsl-path=/some/other/path/xml/xsl/

----------------------------------------------------------------------

5) Install automake

If you don't have autoconf installed, i.e. you don't have the commands
'aclocal' and 'autoconf', you will need to install it:

http://www.gnu.org/software/autoconf/

----------------------------------------------------------------------

6) Run bootstrap

After checking out the gridshib-ca code from CVS, you'll need to run
the script bootstrap.sh (top-level directory) once to use autoconf to
generate the 'configure' script.

----------------------------------------------------------------------

$Id$
