#!@PERL@ @PERL_ARGS@
######################################################################
#
# $Id$
#
# GridShib CA interface for CGI. This is mostly a wrapper around
# the Perl CGI module.
#
######################################################################
# Copyright 2006 The Board of Trustees of the University of Illinois.
# All rights reserved.

# Developed by:

#   The GridShib Project
#   National Center for Supercomputing Applications
#   University of Illinois
#   http://gridshib.globus.org/

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal with the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimers.

#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimers in the
#   documentation and/or other materials provided with the distribution.

#   Neither the names of the National Center for Supercomputing
#   Applications, the University of Illinois, nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this Software without specific prior written permission.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
######################################################################

package CGIinterface;
use Logger;

# Inherit CGI class
use CGI;
@ISA = ("CGI");

# getCertificateRequest
# Returns the certificate request from POST.
# Arguments: None
# Returns: Certificate request, or undef if not present
sub getCertificateRequest
{
    my $self = shift;
    return $self->param('certificateRequest');
}

# getUserId
# Return the user id as reported by Shibboleth through REMOTE_USER.
# Clean the user id so it can pass taint checking.
# Arguments: None
# Returns: User id as string, or under if unknown
sub getUserId
{
    my $self = shift;
    my $remote_user = $self->remote_user();
    my $userId = undef;
    # Clean user anme (from perlsec manual)
    if ($remote_user =~ /^([-\@\w.]+)$/)
    {
	$userId = $1;
    }
    else
    {
	my $logger = Logger->new();
	$logger->err("Illegal characters detected in REMOTE_USER ($remote_user)");
    }
    return $userId;
}

# getIdP
# Returns the Shibboleth identity provider
# Arguments: None
# Returns: IdP as string, or undef if unknown
sub getIdP
{
    my $idp = undef;
    if (defined($ENV{"HTTP_SHIB_IDENTITY_PROVIDER"}))
    {
	$idp = $ENV{"HTTP_SHIB_IDENTITY_PROVIDER"};
    }
    return $idp;
}

# getShibSession
# Returns the Shibboleth session cookie as a "variable=value" string.
# Arguments: None
# Returns: Shibboleth session or undef if cannout be found
sub getShibSession
{
    use CGI::Cookie;

    my %cookies = fetch CGI::Cookie;
    my $shibsession = undef;
    foreach my $key (keys %cookies)
    {
	if ($key =~ /_shibsession_/)
	{
	    $shibsession = $key . "=" . $cookies{$key}->value;
	    last;
	}
    }
    return $shibsession;
}

    
# Return true for import/use
1;

######################################################################
### Local Variables: ***
### mode:perl ***
### End: ***
