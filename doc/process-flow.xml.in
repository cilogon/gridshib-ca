<?xml version="1.0" encoding="UTF-8" ?>
 
<chapter id="process-flow">
<?dbhtml filename="@DOC_DIR@/process-flow.html" ?>

<title>GridShib-CA Process Flow</title>
 
<mediaobject>
	<imageobject>
	<imagedata fileref="gridshib-ca-process-flow.jpg"
		   format="jpeg"
		   width="5in"
		   scalefit="100"/> 
	</imageobject>
</mediaobject>
<para>The following steps describe the normal usage of the GridShib-CA
  by a user.</para>
<orderedlist>
<listitem><para> User visits index.html with browser. Is directed to
logon by clicking on form submit button.
</para></listitem>
<listitem><para> By clicking on logon button, use is sent to
login.cgi. This will cause Shibboleth authentication. The main job of
login.cgi is to ensure that the user's shibboleth identity is
accessible and valid. User is directed to click a submit button to
retrieve their credentials, which invokes the create-jnlp CGI script.
</para></listitem>
<listitem><para> The create-jnlp script creates the JNLP file to
launch the Java Web Start application. The JNLP file contains the
following arguments for the CredentialRetrieve Java
app:
<orderedlist inheritnum="inherit">
  <listitem><para>the URL for the generateCred.pl script (step
6)</para></listitem>
  <listitem><para>The user's Shibboleth Session
cookie</para></listitem>
  <listitem><para>An encrypted token so that CredentialRetriever can
assert that it was legitimately invoked.</para></listitem>
  <listitem><para>Whether or not the client should run in debug
mode.</para></listitem>
  <listitem><para>The lifetime requested by the user for the
credential.</para></listitem>
  <listitem><para>The URL from which the client can receive trusted
CAs (step 10)</para></listitem>
  <listitem><para>Optionally a parameter telling the client not to use
its bundled CAs to validate its https connections (steps 2,3,6 and
10)</para></listitem>
</orderedlist></para></listitem>
<listitem><para>The web browser saves the jnlp file to disk and
launches Java Web Start, passing it the jnlp file.</para></listitem>
<listitem><para>Java Web Start downloads the GridShib.jar file as
directed by the JNLP file, and launches the CredentialRetriever class
from the jar, passing it the Shibboleth Session, Token and URL from
the JNLP file as arguments.</para></listitem>
<listitem><para>CredentialRetriever runs, creates a key pair and
certificate request. CredentialRetriever uses the Shibboleth Session
received via the JNLP file to authenticate to generateCred.pl as if it
were the user's web browser. It passes the following to
generateCred.pl:
<orderedlist inheritnum="inherit">
  <listitem><para><emphasis>certificateRequest</emphasis>: The certificate request
as PEM encoded PKCS10.</para></listitem>
  <listitem><para><emphasis>token</emphasis>: The
encrypted Token generated by login.cgi</para></listitem>
</orderedlist></para></listitem>
<listitem><para>generateCred.pl validates the Token received and then
hands off the certificate request a CA (either a local OpenSSL-based
CA or a MyProxy-based CA) for signing, receiving the signed
certificate in return.</para></listitem>
<listitem><para>generateCred.pl returns the certificate to Credential
Retriever.</para></listitem>
<listitem><para>CredentialRetriever writes the certificate and private
key to local disk in the location expected by Globus Toolkit and
compatible software.</para></listitem>
<listitem><para>Assuming the server is configured to provide trusted
CA certificates to the client, the client connects to
the <emphasis>getTrustedCAs.cgi</emphasis> script, doing a GET (providing no
parameters). The script in returns a list of files (CA certificates
and signing policies) for the client to install, using the following
format, where each file is separated with a line containing the
filename and a fixed prefix:
<screen>
-----File: aa99c057.0
...certificate data...
-----File: aa99c057.signing_policy
...signing policy data...
...and so forth...
</screen> </para></listitem>
<listitem><para>The client writes the returned CA files and policies
to the clients trusted certificates directory (normally
~/.globus/certificates).</para></listitem>
</orderedlist>
</chapter>
