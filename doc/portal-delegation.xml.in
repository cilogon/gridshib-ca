<?xml version="1.0" encoding="UTF-8" ?>
 
<chapter id="portal-delegation">
<?dbhtml filename="@DOC_DIR@/portal-delegation.html" ?>

<title>GridShib-CA Portal Delegation</title>
 

<para>Since version 0.3.0 the GridShib-CA allows for the delegation of
a Grid credential based on Shibboleth authentication of the user to a
web portal that is not itself Shibboleth enabled.</para>
<para>Note that this functionality is highly experimental and disabled
by default. To enabled this functionality the
parameter <emphasis>allowPortalDelegation</emphasis> must be set to
"True". (See the <link linkend="gridshib-ca.conf">configuration
directions in the installation guide</link> for details.)</para>
<para>In addition to the user being authorized, the portal must also
<link linkend="authorizedPortals.conf">be authorized to receive
	credentials</link></para>
<para>An example portal can be
found <ulink
url="https://computer.ncsa.uiuc.edu/cgi-bin/gridshib-ca-demo-portal.cgi">here</ulink>
(and its source can be found
<ulink
url="http://viewcvs.globus.org/viewcvs.cgi/gridshib/gridshib-ca/webdocs/gridshib-ca-demo-portal.cgi.in?view=markup">here</ulink>)</para>
<para>The portal must meet the following requirements:
<orderedlist>
  <listitem><para>It must be https protected.</para></listitem>
  <listitem><para>It must be able to generate a key pair and
certificate request</para></listitem>
  <listitem><para>It must authenticate the user and save state from
the generation of the certificate request to when the certificate is
returned.</para></listitem>
</orderedlist></para>
<mediaobject>
	<imageobject>
	<imagedata fileref="portal-delegation.jpg"
		   format="jpeg"
		   width="5in"
		   scalefit="100"/> 
	</imageobject>
</mediaobject>
<orderedlist>
  <listitem><para>User visits application portal. Portal creates a key
pair and certificate request for the user and presents a user with a
form to submit the certificate request to the GridShib-CA. The form
should have the following fields:
  <orderedlist>
  	<listitem><para><emphasis>certificateRequest</emphasis>: The
PEM-encoded PKCS10 certificate request</para></listitem>
	  <listitem><para><emphasis>portalURL</emphasis>: The URL to which
the generated certificate should be posted in step 6. This URL must be
https.</para></listitem>
	  <listitem><para><emphasis>portData</emphasis>: Arbitrary data
which will be returned to the portal in step 6.</para></listitem>
  </orderedlist></para></listitem>
  <listitem><para>User submits form generated by application portal,
submitting certificate request to the GridShib-CA. This will cause the
user to undergo Shibboleth authentication if they have not already
done so. The portalLogin.cgi script will present the user with a form
indicating that they are about to delegation a Grid credential to the
portal and ask them to confirm. This form will have all the fields
listed in the previous step, plus the following:
  <orderedlist>
	  <listitem><para><emphasis>token</emphasis>: A encrypted token that
ensures the users has agreed to this delegation. This prevents the
users from being directed to the GridShib-CA by a malicious
portal.</para></listitem>
  </orderedlist></para></listitem>
  <listitem><para>When the user submits the form from portalLogin.cgi,
the certificate request will be submitted to
generateCred.cgi.</para></listitem>
  <listitem><para>Assuming the user and portal
are <ulink url="install.html#conf">authorized</ulink> a certificate
will be created.</para></listitem>
  <listitem><para>The certificate is presented back to the user to
submit back to the portal. The presented form will have tje following
variables:
  <orderedlist>
	  <listitem><para><emphasis>status</emphasis>: One of the following
possible values: <emphasis>success</emphasis>
or <emphasis>rejected</emphasis>. <emphasis>rejected</emphasis>
indicates that the user declined to delegate a
credential.</para></listitem>
	  <listitem><para><emphasis>certificate</emphasis>: The PEM-encoded
X.509 certificate.</para></listitem>
	  <listitem><para><emphasis>portalData</emphasis>: The portal data
from step 1.</para></listitem>
  </orderedlist></para></listitem>
  <listitem><para>When the user submits the certificate back to the
portal, the portal associates the certificate with the key pair it
previously generated, creating a Grid credential to be used on behalf
of the user. Not that the portal should be aware that a malicious user
could alter fields presented and validate things accordingly. In
particular the portal should ensure the modulus of the returned
certificate matches the modulus in the private key generated in step
1. It should also be wary trusting the information in portalData -
this can be used to help it complete the request, but should not be
trusted in its own right.</para></listitem>
</orderedlist>
</chapter>
