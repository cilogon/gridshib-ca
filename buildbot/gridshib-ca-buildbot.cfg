# -*- python -*-
# ex: set syntax=python:

## GridShib buildbot configuration

###### How to use this file

# In the buildbot master configuration (master.cfg), you need to initialize
# the following:

# c = BuildmasterConfig = {}
# c['schedulers'] = []
# c['builders'] = []

# You need to define the slaves, status targets as you normally would.
# Set slavename to the name of the slave to use for building

# slavename="buildslave"

# Then include this file:
# gridshibBuildbotCFG="gridshib-buildbot.cfg"
# print "Loading %s" % gridshibBuildbotCFG
# execfile(gridshibBuildbotCFG)
# print "Done parsing %s" % gridshibBuildbotCFG

# Thats it.

# Email address to which to send results
emailAddr="gridshib-dev@globus.org"
# from email address
fromAddr="gridshib.buildbot@gmail.com"

####### BUILDERS

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

# buildbot/process/factory.py provides several BuildFactory classes you can
# start with, which implement build processes for common targets (GNU
# autoconf projects, CPAN perl modules, etc). The factory.BuildFactory is the
# base class, and is configured with a series of BuildSteps. When the build
# is run, the appropriate buildslave is told to execute each Step in turn.

# the first BuildStep is typically responsible for obtaining a copy of the
# sources. There are source-obtaining Steps in buildbot/process/step.py for
# CVS, SVN, and others.

cvsroot = ":pserver:anonymous@cilogon.cvs.sourceforge.net:/cvsroot/cilogon"
cvsmodule = "gridshib-ca"

from buildbot.process import factory
from buildbot.steps.source import CVS
from buildbot.steps.shell import Compile, Configure, ShellCommand
from buildbot.steps.python_twisted import Trial
from buildbot.status import mail

# Test out build of GS-CA from CVS
gridshibCABuilds=[]
for tag in [ "v0_5_BRANCH", "HEAD" ]:
    f = factory.BuildFactory()
    # Checkout the specific branch we want to test for the gridshib-ca
    # directory.
    f.addStep(CVS(cvsroot,
                  # Start clean each time
                  mode="clobber",
                  cvsmodule="gridshib-ca",
                  # Where the checkout should go.
                  workdir="build",
                  branch=tag))

    # Test script is the same for all branches (run in build directory)
    f.addStep(
        ShellCommand(command=["buildbot/gridshib-ca-test.sh"]))
    name = "gridshib-ca-%s-build" % tag
    b = {
        "name" : name,
        "slavename" : slavename,
        "builddir" : name,
        "factory" : f
        }
    c['builders'].append(b)
    gridshibCABuilds.append(name)

c['status'].append(
    mail.MailNotifier(fromaddr=fromAddr,
                      mode="all",  # Always send email
		      addLogs=False,
                      builders=gridshibCABuilds,
                      extraRecipients=[emailAddr],
                      sendToInterestedUsers=False))

####### SCHEDULERS

from buildbot.scheduler import Nightly

c['schedulers'].append(Nightly('gridshib-ca-cvs-build',
                               gridshibCABuilds,
                               hour=0, minute=0))

